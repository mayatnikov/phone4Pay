<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<security:http pattern="/ds/other**" security="none"></security:http>

	<security:http pattern="/ds/**" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager">
		
		<security:anonymous enabled="false" />
		
		<security:intercept-url pattern="/ds/echo/**"
			access="ROLE_USER,SCOPE_READ" method="POST" />
<!--
		<security:intercept-url pattern="/rest/person/**"
			access="ROLE_USER,SCOPE_WRITE" method="POST" />
		
		<security:intercept-url pattern="/rest/person/**"
			access="ROLE_USER,SCOPE_WRITE" method="PUT" />
		
		<security:intercept-url pattern="/rest/person/**"
			access="ROLE_USER,SCOPE_DELETE" method="DELETE" />
-->
		<security:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />

		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http>
	
	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	
	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
		xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<security:authentication-manager alias="authenticationManager" />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">
		<constructor-arg name="dataSource" ref="dataSource"></constructor-arg>
	</bean>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
	</bean>
	<oauth2:resource-server id="resourceServerFilter"
		token-services-ref="tokenServices" />
</beans>
